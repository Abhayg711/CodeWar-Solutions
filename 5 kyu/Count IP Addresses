Given a database of first and last IPv4 addresses, calculate the number of addresses between them (including the first one, excluding the last one).

Input
---------------------------------
|     Table    | Column | Type  |
|--------------+--------+-------|
| ip_addresses | id     | int   |
|              | first  | text  |
|              | last   | text  |
---------------------------------
Output
----------------------
|   Column    | Type |
|-------------+------|
| id          | int  |
| ips_between | int  |
----------------------
All inputs will be valid IPv4 addresses in the form of strings. The last address will always be greater than the first one.



### SQL Solutions ###
select id, last::inet - first::inet as ips_between from ip_addresses


### Python Solutions ###

def ips_between(start, end):
    # TODO
    strt_lst = start.split('.')
    end_lst = end.split('.')
    
#     strt_lst = strt_lst[::-1]
#     end_lst = end_lst[::-1]
    
    strt_lst = list(map(int, strt_lst))
    end_lst = list(map(int, end_lst))
    strt_temp = (strt_lst[0])*256**3 + (strt_lst[1])*256**2 + strt_lst[2]*256 + strt_lst[3]
    end_temp = (end_lst[0])*256**3 + (end_lst[1])*256**2 + end_lst[2]*256 + end_lst[3]
    
    count_ip = end_temp - strt_temp
    return count_ip
